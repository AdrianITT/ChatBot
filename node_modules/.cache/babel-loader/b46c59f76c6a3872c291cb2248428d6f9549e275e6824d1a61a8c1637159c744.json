{"ast":null,"code":"var _jsxFileName = \"/Users/appletech/Desktop/chatbottest/chatbottest/src/Components/ChatBotWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ChatBotProvider, useMessages } from \"react-chatbotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatLogic() {\n  _s();\n  const {\n    pushMessage,\n    pushUserMessage,\n    pushOptions\n  } = useMessages();\n  const [step, setStep] = useState(\"start\");\n  const next = newStep => setStep(newStep);\n  useEffect(() => {\n    if (step === \"start\") {\n      pushMessage(\"¡Hola! ¿Eres cliente nuestro?\");\n      pushOptions([{\n        label: \"Sí\",\n        value: \"yes\",\n        onClick: () => next(\"askName\")\n      }, {\n        label: \"No\",\n        value: \"no\",\n        onClick: () => next(\"end\")\n      }]);\n    }\n    if (step === \"end\") {\n      pushMessage(\"Gracias por tu interés. ¡Hasta pronto!\");\n    }\n    if (step === \"askName\") {\n      pushMessage(\"¿Cuál es tu nombre?\");\n      next(\"askSurname\");\n    }\n    if (step === \"askSurname\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu apellido?\");\n        next(\"askEmail\");\n      }, 1000);\n    }\n    if (step === \"askEmail\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu correo electrónico?\");\n        next(\"askPhone\");\n      }, 1000);\n    }\n    if (step === \"askPhone\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu número de teléfono?\");\n        next(\"askCompany\");\n      }, 1000);\n    }\n    if (step === \"askCompany\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es el nombre de tu empresa?\");\n        next(\"selectService\");\n      }, 1000);\n    }\n    if (step === \"selectService\") {\n      setTimeout(() => {\n        pushMessage(\"Selecciona un servicio:\");\n        pushOptions([{\n          label: \"Servicio A\",\n          value: \"a\",\n          onClick: () => next(\"askQuantity\")\n        }, {\n          label: \"Servicio B\",\n          value: \"b\",\n          onClick: () => next(\"askQuantity\")\n        }]);\n      }, 1000);\n    }\n    if (step === \"askQuantity\") {\n      setTimeout(() => {\n        pushMessage(\"¿Qué cantidad deseas?\");\n        next(\"addAnother\");\n      }, 1000);\n    }\n    if (step === \"addAnother\") {\n      setTimeout(() => {\n        pushMessage(\"¿Deseas agregar otro servicio?\");\n        pushOptions([{\n          label: \"Sí\",\n          value: \"yes\",\n          onClick: () => next(\"selectService\")\n        }, {\n          label: \"No\",\n          value: \"no\",\n          onClick: () => next(\"summary\")\n        }]);\n      }, 1000);\n    }\n    if (step === \"summary\") {\n      setTimeout(() => {\n        pushMessage(\"¡Gracias! Hemos recibido tu información.\");\n      }, 1000);\n    }\n  }, [step, pushMessage, pushOptions]);\n  return null;\n}\n_s(ChatLogic, \"zAenWIE0ow4xo+n9irk2TuYPxvk=\", false, function () {\n  return [useMessages];\n});\n_c = ChatLogic;\nexport default function ChatBotWidget() {\n  return /*#__PURE__*/_jsxDEV(ChatBotProvider, {\n    children: /*#__PURE__*/_jsxDEV(ChatLogic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ChatBotWidget;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatLogic\");\n$RefreshReg$(_c2, \"ChatBotWidget\");","map":{"version":3,"names":["React","useEffect","useState","ChatBotProvider","useMessages","jsxDEV","_jsxDEV","ChatLogic","_s","pushMessage","pushUserMessage","pushOptions","step","setStep","next","newStep","label","value","onClick","setTimeout","_c","ChatBotWidget","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/appletech/Desktop/chatbottest/chatbottest/src/Components/ChatBotWidget.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ChatBotProvider,\n  useMessages,\n} from \"react-chatbotify\";\n\nfunction ChatLogic() {\n  const { pushMessage, pushUserMessage, pushOptions } = useMessages();\n  const [step, setStep] = useState(\"start\");\n\n  const next = (newStep) => setStep(newStep);\n\n  useEffect(() => {\n    if (step === \"start\") {\n      pushMessage(\"¡Hola! ¿Eres cliente nuestro?\");\n      pushOptions([\n        { label: \"Sí\", value: \"yes\", onClick: () => next(\"askName\") },\n        { label: \"No\", value: \"no\", onClick: () => next(\"end\") },\n      ]);\n    }\n\n    if (step === \"end\") {\n      pushMessage(\"Gracias por tu interés. ¡Hasta pronto!\");\n    }\n\n    if (step === \"askName\") {\n      pushMessage(\"¿Cuál es tu nombre?\");\n      next(\"askSurname\");\n    }\n\n    if (step === \"askSurname\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu apellido?\");\n        next(\"askEmail\");\n      }, 1000);\n    }\n\n    if (step === \"askEmail\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu correo electrónico?\");\n        next(\"askPhone\");\n      }, 1000);\n    }\n\n    if (step === \"askPhone\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es tu número de teléfono?\");\n        next(\"askCompany\");\n      }, 1000);\n    }\n\n    if (step === \"askCompany\") {\n      setTimeout(() => {\n        pushMessage(\"¿Cuál es el nombre de tu empresa?\");\n        next(\"selectService\");\n      }, 1000);\n    }\n\n    if (step === \"selectService\") {\n      setTimeout(() => {\n        pushMessage(\"Selecciona un servicio:\");\n        pushOptions([\n          { label: \"Servicio A\", value: \"a\", onClick: () => next(\"askQuantity\") },\n          { label: \"Servicio B\", value: \"b\", onClick: () => next(\"askQuantity\") },\n        ]);\n      }, 1000);\n    }\n\n    if (step === \"askQuantity\") {\n      setTimeout(() => {\n        pushMessage(\"¿Qué cantidad deseas?\");\n        next(\"addAnother\");\n      }, 1000);\n    }\n\n    if (step === \"addAnother\") {\n      setTimeout(() => {\n        pushMessage(\"¿Deseas agregar otro servicio?\");\n        pushOptions([\n          { label: \"Sí\", value: \"yes\", onClick: () => next(\"selectService\") },\n          { label: \"No\", value: \"no\", onClick: () => next(\"summary\") },\n        ]);\n      }, 1000);\n    }\n\n    if (step === \"summary\") {\n      setTimeout(() => {\n        pushMessage(\"¡Gracias! Hemos recibido tu información.\");\n      }, 1000);\n    }\n  }, [step, pushMessage, pushOptions]);\n\n  return null;\n}\n\nexport default function ChatBotWidget() {\n  return (\n    <ChatBotProvider>\n      <ChatLogic />\n    </ChatBotProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,eAAe,EACfC,WAAW,QACN,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC,WAAW;IAAEC,eAAe;IAAEC;EAAY,CAAC,GAAGP,WAAW,CAAC,CAAC;EACnE,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMY,IAAI,GAAIC,OAAO,IAAKF,OAAO,CAACE,OAAO,CAAC;EAE1Cd,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,KAAK,OAAO,EAAE;MACpBH,WAAW,CAAC,+BAA+B,CAAC;MAC5CE,WAAW,CAAC,CACV;QAAEK,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,SAAS;MAAE,CAAC,EAC7D;QAAEE,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,KAAK;MAAE,CAAC,CACzD,CAAC;IACJ;IAEA,IAAIF,IAAI,KAAK,KAAK,EAAE;MAClBH,WAAW,CAAC,wCAAwC,CAAC;IACvD;IAEA,IAAIG,IAAI,KAAK,SAAS,EAAE;MACtBH,WAAW,CAAC,qBAAqB,CAAC;MAClCK,IAAI,CAAC,YAAY,CAAC;IACpB;IAEA,IAAIF,IAAI,KAAK,YAAY,EAAE;MACzBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,uBAAuB,CAAC;QACpCK,IAAI,CAAC,UAAU,CAAC;MAClB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,UAAU,EAAE;MACvBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,iCAAiC,CAAC;QAC9CK,IAAI,CAAC,UAAU,CAAC;MAClB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,UAAU,EAAE;MACvBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,iCAAiC,CAAC;QAC9CK,IAAI,CAAC,YAAY,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,YAAY,EAAE;MACzBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,mCAAmC,CAAC;QAChDK,IAAI,CAAC,eAAe,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,eAAe,EAAE;MAC5BO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,yBAAyB,CAAC;QACtCE,WAAW,CAAC,CACV;UAAEK,KAAK,EAAE,YAAY;UAAEC,KAAK,EAAE,GAAG;UAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,aAAa;QAAE,CAAC,EACvE;UAAEE,KAAK,EAAE,YAAY;UAAEC,KAAK,EAAE,GAAG;UAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,aAAa;QAAE,CAAC,CACxE,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,aAAa,EAAE;MAC1BO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,uBAAuB,CAAC;QACpCK,IAAI,CAAC,YAAY,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,YAAY,EAAE;MACzBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,gCAAgC,CAAC;QAC7CE,WAAW,CAAC,CACV;UAAEK,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE,KAAK;UAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,eAAe;QAAE,CAAC,EACnE;UAAEE,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE,IAAI;UAAEC,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,SAAS;QAAE,CAAC,CAC7D,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,IAAIF,IAAI,KAAK,SAAS,EAAE;MACtBO,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,0CAA0C,CAAC;MACzD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACG,IAAI,EAAEH,WAAW,EAAEE,WAAW,CAAC,CAAC;EAEpC,OAAO,IAAI;AACb;AAACH,EAAA,CAvFQD,SAAS;EAAA,QACsCH,WAAW;AAAA;AAAAgB,EAAA,GAD1Db,SAAS;AAyFlB,eAAe,SAASc,aAAaA,CAAA,EAAG;EACtC,oBACEf,OAAA,CAACH,eAAe;IAAAmB,QAAA,eACdhB,OAAA,CAACC,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEtB;AAACC,GAAA,GANuBN,aAAa;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}