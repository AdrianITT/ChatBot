{"ast":null,"code":"var _jsxFileName = \"/Users/appletech/Desktop/chatbottest/chatbottest/src/Components/ChatBotWidget.jsx\",\n  _s = $RefreshSig$();\n// src/ChatBot.js\nimport React, { useState } from 'react';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: '¡Hola! ¿En qué puedo ayudarte hoy?'\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const handleUserInput = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSendMessage = () => {\n    if (userInput.trim()) {\n      const newMessages = [...messages, {\n        sender: 'user',\n        text: userInput\n      }, {\n        sender: 'bot',\n        text: `Recibí tu mensaje: \"${userInput}\"`\n      } // Simulación de respuesta del bot\n      ];\n      setMessages(newMessages);\n      setUserInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        sender: msg.sender,\n        text: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: handleUserInput,\n      placeholder: \"Escribe un mensaje...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"8lyLv9Py3kjYM++1iZO42U1s/QM=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","Message","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","sender","text","userInput","setUserInput","handleUserInput","event","target","value","handleSendMessage","trim","newMessages","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/appletech/Desktop/chatbottest/chatbottest/src/Components/ChatBotWidget.jsx"],"sourcesContent":["// src/ChatBot.js\nimport React, { useState } from 'react';\nimport Message from './Message';\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([\n    { sender: 'bot', text: '¡Hola! ¿En qué puedo ayudarte hoy?' },\n  ]);\n  const [userInput, setUserInput] = useState('');\n\n  const handleUserInput = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (userInput.trim()) {\n      const newMessages = [\n        ...messages,\n        { sender: 'user', text: userInput },\n        { sender: 'bot', text: `Recibí tu mensaje: \"${userInput}\"` }, // Simulación de respuesta del bot\n      ];\n      setMessages(newMessages);\n      setUserInput('');\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbox\">\n        {messages.map((msg, index) => (\n          <Message key={index} sender={msg.sender} text={msg.text} />\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={handleUserInput}\n        placeholder=\"Escribe un mensaje...\"\n      />\n      <button onClick={handleSendMessage}>Enviar</button>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IAAEQ,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAqC,CAAC,CAC9D,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,eAAe,GAAIC,KAAK,IAAK;IACjCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,SAAS,CAACO,IAAI,CAAC,CAAC,EAAE;MACpB,MAAMC,WAAW,GAAG,CAClB,GAAGZ,QAAQ,EACX;QAAEE,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEC;MAAU,CAAC,EACnC;QAAEF,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,uBAAuBC,SAAS;MAAI,CAAC,CAAE;MAAA,CAC/D;MACDH,WAAW,CAACW,WAAW,CAAC;MACxBP,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjB,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBd,QAAQ,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBpB,OAAA,CAACF,OAAO;QAAaO,MAAM,EAAEc,GAAG,CAACd,MAAO;QAACC,IAAI,EAAEa,GAAG,CAACb;MAAK,GAA1Cc,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXb,KAAK,EAAEL,SAAU;MACjBmB,QAAQ,EAAEjB,eAAgB;MAC1BkB,WAAW,EAAC;IAAuB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFxB,OAAA;MAAQ4B,OAAO,EAAEf,iBAAkB;MAAAI,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}